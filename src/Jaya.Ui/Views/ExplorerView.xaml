<UserControl
    x:Class="Jaya.Ui.Views.ExplorerView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Jaya.Ui.Converters;assembly=Jaya.Ui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
    xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
    xmlns:j="https://github.com/waliarubal/Jaya"
    xmlns:m="clr-namespace:Jaya.Ui.Models;assembly=Jaya.Ui"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Jaya.Ui.ViewModels;assembly=Jaya.Ui"
    d:DesignHeight="480"
    d:DesignWidth="640"
    j:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <Design.DataContext>
        <vm:ExplorerViewModel />
    </Design.DataContext>
    <UserControl.Resources>
        <c:BooleanToTreeNodeVisibilityConverter x:Key="TreeNodeVisibilityConverter" />
        <j:BitmapValueConverter x:Key="BitmapValueConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.Styles>
            <Style Selector="Border[IsVisible=True] &gt; StackPanel &gt; DrawingPresenter.Spinner">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Style.Animations>
                    <Animation RepeatCount="Loop" Duration="0:0:1.5">
                        <KeyFrame Cue="100%">
                            <Setter Property="RotateTransform.Angle" Value="360" />
                        </KeyFrame>
                    </Animation>
                </Style.Animations>
            </Style>
        </Grid.Styles>

        <!--  details view  -->
        <DataGrid
            IsReadOnly="True"
            IsVisible="{Binding PaneConfig.IsDetailsView, Mode=OneWay}"
            Items="{Binding Item.Children, Mode=OneWay}"
            SelectionMode="Extended">
            <DataGrid.Styles>
                <Style Selector="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style Selector="Image[IsVisible=True].Icon">
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Margin" Value="0 0 4 0" />
                </Style>
                <Style Selector="DrawingPresenter[IsVisible=True].Icon">
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Margin" Value="0 0 4 0" />
                </Style>
                <Style Selector="Path[IsVisible=True].Icon">
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Stretch" Value="UniformToFill" />
                    <Setter Property="Fill" Value="{DynamicResource ThemeForegroundBrush}" />
                    <Setter Property="Margin" Value="0 0 4 0" />
                </Style>
                <!--<Style Selector="DataGridRow">
                    <Setter Property="IsVisible" Value="{Binding IsHidden, Mode=OneWay, Converter={StaticResource TreeNodeVisibilityConverter}}" />
                </Style>-->
            </DataGrid.Styles>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="ObjectEntry" Orientation="Horizontal" Background="#01000000">
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped" SourceObject="{Binding #ObjectEntry}">
                                        <ia:InvokeCommandAction Command="{Binding $parent[DataGrid].DataContext.InvokeObjectCommand}" CommandParameter="{Binding}" />
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Image
                                    Classes="Icon"
                                    IsVisible="{Binding IsService}"
                                    Source="{Binding ImagePath, Converter={StaticResource BitmapValueConverter}, ConverterParameter=48}" />
                                <DrawingPresenter
                                    Classes="Icon"
                                    Drawing="{DynamicResource Icon.CloudFolder}"
                                    IsVisible="{Binding IsAccount}" />
                                <Path
                                    Classes="Icon"
                                    Data="{StaticResource Icon.Computer}"
                                    IsVisible="{Binding IsComputer}" />
                                <Path
                                    Classes="Icon"
                                    Data="{StaticResource Icon.Drive}"
                                    IsVisible="{Binding IsDrive}"
                                    Stretch="Uniform" />
                                <DrawingPresenter
                                    Classes="Icon"
                                    Drawing="{DynamicResource Icon.Folder}"
                                    IsVisible="{Binding IsDirectory}" />
                                <DrawingPresenter
                                    Classes="Icon"
                                    Drawing="{DynamicResource Icon.TextFile}"
                                    IsVisible="{Binding IsFile}" />
                                <TextBlock Width="220" Text="{Binding Label}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Binding="{Binding Object.Modified}" Header="Date Modified" />-->
                <DataGridTextColumn Binding="{Binding Object.Type}" Header="Type" />
                <DataGridTemplateColumn Header="Size">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Object.SizeString}" TextAlignment="Right" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!--  thumbnail view  -->
        <ListBox
            Padding="0"
            BorderBrush="Transparent"
            IsVisible="{Binding PaneConfig.IsThumbnailView, Mode=OneWay}"
            Items="{Binding Item.Children, Mode=OneWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectionMode="Multiple">
            <ListBox.Styles>
                <Style Selector="ListBoxItem">
                    <!--<Setter Property="IsVisible" Value="{Binding IsHidden, Mode=OneWay, Converter={StaticResource TreeNodeVisibilityConverter}}" />-->
                    <Setter Property="Margin" Value="2" />
                </Style>
                <Style Selector="Image[IsVisible=True].Icon">
                    <Setter Property="Width" Value="48" />
                    <Setter Property="Height" Value="48" />
                </Style>
                <Style Selector="DrawingPresenter[IsVisible=True].Icon">
                    <Setter Property="Width" Value="48" />
                    <Setter Property="Height" Value="48" />
                </Style>
                <Style Selector="Path[IsVisible=True].Icon">
                    <Setter Property="Width" Value="48" />
                    <Setter Property="Height" Value="48" />
                    <Setter Property="Stretch" Value="UniformToFill" />
                    <Setter Property="Fill" Value="{DynamicResource ThemeForegroundBrush}" />
                </Style>
            </ListBox.Styles>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding $parent[ScrollContentPresenter].Bounds.Width, Mode=OneWay}"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type m:ExplorerItemModel}">
                    <StackPanel Name="ObjectEntry" Background="#01000000">
                        <i:Interaction.Behaviors>
                            <ia:EventTriggerBehavior EventName="DoubleTapped" SourceObject="{Binding #ObjectEntry}">
                                <ia:InvokeCommandAction Command="{Binding $parent[ListBox].DataContext.InvokeObjectCommand}" CommandParameter="{Binding}" />
                            </ia:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Image
                            Classes="Icon"
                            IsVisible="{Binding IsService}"
                            Source="{Binding ImagePath, Converter={StaticResource BitmapValueConverter}, ConverterParameter=48}" />
                        <DrawingPresenter
                            Classes="Icon"
                            Drawing="{DynamicResource Icon.CloudFolder}"
                            IsVisible="{Binding IsAccount}" />
                        <Path
                            Classes="Icon"
                            Data="{StaticResource Icon.Computer}"
                            IsVisible="{Binding IsComputer}" />
                        <Path
                            Classes="Icon"
                            Data="{StaticResource Icon.Drive}"
                            IsVisible="{Binding IsDrive}"
                            Stretch="Uniform" />
                        <DrawingPresenter
                            Classes="Icon"
                            Drawing="{DynamicResource Icon.Folder}"
                            IsVisible="{Binding IsDirectory}" />
                        <DrawingPresenter
                            Classes="Icon"
                            Drawing="{DynamicResource Icon.TextFile}"
                            IsVisible="{Binding IsFile}" />
                        <TextBlock
                            Width="54"
                            Text="{Binding Mode=OneWay, Path=Label}"
                            TextAlignment="Center"
                            TextWrapping="Wrap" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsVisible="{Binding !Item.Children.Count, Mode=OneWay}"
            Text="This folder is empty." />

        <Border
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{DynamicResource ThemeBackgroundBrush}"
            BorderThickness="0"
            IsVisible="{Binding IsBusy}">
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <DrawingPresenter Classes="Spinner" Drawing="{DynamicResource Icon.Refresh}" />
                <TextBlock Margin="4,0,0,0" Text="Working, please wait..." />
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
