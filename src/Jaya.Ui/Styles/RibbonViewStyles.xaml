<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:v="clr-namespace:Jaya.Ui.Views;assembly=Jaya.Ui"
  xmlns:local="clr-namespace:AvaloniaUI.Ribbon;assembly=AvaloniaUI.Ribbon">
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/Gallery.xaml" />
  <!--StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/Ribbon.xaml" /-->
  <!--StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonTab.xaml" /-->
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonMenu.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonWindow.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonButton.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonSmallButtonHGroup.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonSplitButton.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonToggleButton.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/RibbonGroupBox.xaml" />
  <StyleInclude Source="avares://AvaloniaUI.Ribbon/Styles/KeyTip.xaml" />

  <Style Selector="v|RibbonView DrawingPresenter">
    <Setter Property="Width" Value="16"/>
    <Setter Property="Height" Value="16"/>
  </Style>
  <Style Selector="v|RibbonView DrawingPresenter.Large">
    <Setter Property="Width" Value="32"/>
    <Setter Property="Height" Value="32"/>
  </Style>


  <!-- ribbon -->
  <Style Selector="local|Ribbon">
    <Setter Property="HeaderBackground" Value="{DynamicResource Ribbon.TabStripBackgroundBrush}" />
    <Setter Property="HeaderForeground" Value="{DynamicResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="{DynamicResource Ribbon.BackgroundBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel Background="Transparent">
          <Rectangle Classes="DownwardShadow" DockPanel.Dock="Bottom"/>
          <Panel DockPanel.Dock="Top" Background="{TemplateBinding HeaderBackground}">
            <Rectangle Classes="UpwardShadow" VerticalAlignment="Bottom" IsVisible="{Binding !IsCollapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
            <DockPanel>
              <ContentPresenter x:Name="PART_MenuPresenter" Content="{TemplateBinding Menu}" DockPanel.Dock="Left"/>
              <Button Name="HelpButton" Classes="RibbonHelpButton" Width="23" Focusable="False" Command="{TemplateBinding HelpButtonCommand}" DockPanel.Dock="Right">
                <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Text="?" FontWeight="Black" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
              </Button>
              <ToggleButton Name="ExpandCollapseToggleButton" Classes="RibbonToggleButton" Width="23" IsChecked="{Binding IsCollapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" Focusable="False" DockPanel.Dock="Right">
                <Path Data="M 0 2.5 L 2.5 0 L 5 2.5" Classes="RibbonExpandCollapsePath" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="5" Height="2.5" StrokeThickness="2"/>
              </ToggleButton>
              <ItemsPresenter Name="PART_ItemsPresenter" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Items="{TemplateBinding Items}" ItemsPanel="{TemplateBinding ItemsPanel}" ItemTemplate="{TemplateBinding ItemTemplate}"/>
            </DockPanel>
          </Panel>
          <Panel DockPanel.Dock="Top">
            <Popup x:Name="PART_CollapsedContentPopup" PlacementTarget="{Binding ElementName=SeparatorRectangle}" Width="{Binding Path=Bounds.Width, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="93" PlacementMode="Bottom" StaysOpen="False" IsOpen="{Binding IsCollapsedPopupOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
              <ContentControl x:Name="PART_PopupGroupsPresenterHolder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
            </Popup>
          </Panel>
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
            <Panel>
              <ContentPresenter Name="PART_SelectedContentHost" Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" IsVisible="False"/>
              <ContentControl Name="PART_GroupsPresenterHolder" HorizontalAlignment="Stretch">
                <ItemsControl Name="PART_SelectedGroupsHost" Items="{TemplateBinding SelectedGroups}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0" TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" MinWidth="100" Height="90">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <local:RibbonGroupsStackPanel x:Name="PART_ItemsPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Orientation="Horizontal" Margin="0" Spacing="0"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ContentControl>
            </Panel>
          </Border>
        </DockPanel>
      </ControlTemplate>
    </Setter>
    <Setter Property="ItemsPanel">
      <ItemsPanelTemplate>
        <StackPanel Orientation="Horizontal"/>
      </ItemsPanelTemplate>
    </Setter>
  </Style>

  <Style Selector="local|Ribbon /template/ Button.RibbonHelpButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="{Binding HeaderForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Ribbon}}"/>
    <Setter Property="Padding" Value="0"/>
  </Style>
  <Style Selector="local|Ribbon /template/ Button.RibbonHelpButton:checked:not(:pointerover) /template/ ContentPresenter">
    <Setter Property="Background" Value="Transparent"/>
  </Style>
  <Style Selector="local|Ribbon /template/ Button.RibbonHelpButton:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource Ribbon.TabHoverBackgroundBrush}"/>
  </Style>
  
  <Style Selector="local|Ribbon /template/ ToggleButton.RibbonToggleButton">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Foreground" Value="{Binding HeaderForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Ribbon}}"/>
    <Setter Property="Padding" Value="0"/>
  </Style>
  <Style Selector="local|Ribbon /template/ ToggleButton.RibbonToggleButton:pointerover">
    <Setter Property="Background" Value="{DynamicResource Ribbon.TabHoverBackgroundBrush}"/>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Horizontal][IsCollapsed=True] /template/ ToggleButton.RibbonToggleButton Path.RibbonExpandCollapsePath">
    <Setter Property="RenderTransform">
      <RotateTransform Angle="180"/>
    </Setter>
  </Style>

  <!-- ribbon tabs -->
  <Style Selector="local|RibbonTab">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderHighBrush}"/>
    <Setter Property="Margin" Value="-6,0" />
    <Setter Property="Padding" Value="8,3,8,4" />
    <Setter Property="MinWidth" Value="70" />
    <Setter Property="Height" Value="23"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <Grid IsVisible="{TemplateBinding IsSelected}" ClipToBounds="True" ColumnDefinitions="6,*,6">
            <Grid.OpacityMask>
              <LinearGradientBrush StartPoint="0%,100%" EndPoint="0%,0%">
                <GradientStop Offset="0" Color="White"/>
                <GradientStop Offset="0.625" Color="#7FFFFFFF"/>
                <GradientStop Offset="1" Color="#00FFFFFF"/>
              </LinearGradientBrush>
            </Grid.OpacityMask>
            <Rectangle Classes="LeftwardShadow" Grid.Column="0"/>
            <Rectangle Fill="{DynamicResource Shadow.ShadowBrush}" Grid.Column="1"/>
            <Rectangle Classes="RightwardShadow" Grid.Column="2"/>
          </Grid>
          <Panel Margin="6,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Rectangle Classes="RibbonTabBackgroundRectangle"/>
            <ContentPresenter
                Name="PART_ContentPresenter"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Content="{TemplateBinding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}" />
          </Panel>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="local|RibbonTab /template/ Rectangle.RibbonTabBackgroundRectangle">
    <Setter Property="Fill" Value="#01000000"/>
  </Style>
  <Style Selector="local|RibbonTab:pointerover:not(:selected) /template/ Rectangle.RibbonTabBackgroundRectangle">
    <Setter Property="Fill" Value="{DynamicResource Ribbon.TabHoverBackgroundBrush}" />
  </Style>
  <Style Selector="local|RibbonTab:selected /template/ Rectangle.RibbonTabBackgroundRectangle">
    <Setter Property="Fill" Value="{DynamicResource Ribbon.TabSelectedBackgroundBrush}" />
  </Style>
  
  
  <!-- ribbon menu -->
  <Style Selector="local|RibbonMenu">
    <Setter Property="Background" Value="{DynamicResource Ribbon.FileButtonIdleBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource Ribbon.FileButtonForegroundBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="6,4"/>
    <Setter Property="Width" Value="56"/>
    <Setter Property="Height" Value="23"/>
    <Setter Property="Content" Value="File"/>
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <ToggleButton x:Name="ContentButton"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Foreground="{TemplateBinding Foreground}"
                          Content="{TemplateBinding Content}"
                          Padding="{TemplateBinding Padding}"
                          TextBlock.FontWeight="SemiBold"
                          HorizontalContentAlignment="Center"
                          VerticalContentAlignment="Center"
                          IsChecked="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"/>
          <Popup PlacementTarget="{Binding #ContentButton}" PlacementMode="Bottom" VerticalOffset="-23" StaysOpen="False" IsOpen="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" Width="500" MinHeight="300">
            <Border TextBlock.Foreground="{DynamicResource ThemeForegroundBrush}">
              <DockPanel>
                <DockPanel Name="MenuRightColumnDockPanel" Background="{DynamicResource Ribbon.TabStripBackgroundBrush}" Width="200" DockPanel.Dock="Right">
                  <Grid Height="23" DockPanel.Dock="Top">
                    <TextBlock Text="{TemplateBinding RightColumnHeader}" FontWeight="SemiBold" Margin="10,0" VerticalAlignment="Center"/>
                  </Grid>
                  <Panel>
                    <ItemsPresenter x:Name="PART_RightColumnItemsPresenter" Items="{TemplateBinding RightColumnItems}" ItemsPanel="{TemplateBinding RightColumnItemsPanel}" ItemTemplate="{TemplateBinding RightColumnItemTemplate}" IsVisible="{Binding !HasSelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    <ItemsPresenter x:Name="SelectedSubItemsPresenter" Items="{TemplateBinding SelectedSubItems}" IsVisible="{TemplateBinding HasSelectedItem}"/>
                  </Panel>
                  <!--ListBox Classes="RibbonMenuPlacesList" Items="{Binding MenuPlacesItems, RelativeSource={RelativeSource Mode=TemplatedParent}}"/-->
                </DockPanel>
                <DockPanel Background="{DynamicResource Ribbon.BackgroundBrush}" Margin="0,0,-6,0">
                  <!--Menu Classes="RibbonMenuMenu" Items="{Binding MenuItems, RelativeSource={RelativeSource Mode=TemplatedParent}}" Padding="0,34,0,0"/>
                <ToggleButton Name="BackButton" FontWeight="SemiBold" Classes="RibbonToggleButton" IsChecked="{Binding !IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Height="34" Width="{Binding Bounds.Width, ElementName=MenuButton, Mode=OneWay}">
                  <Grid Width="24" Height="24">
                    <Ellipse Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" StrokeThickness="2"/>
                    <Grid Width="14" Height="10">
                      <Rectangle Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Height="2" VerticalAlignment="Center"/>
                      <Path Data="M 5 0 L 0 5 L 5 10" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" StrokeThickness="2" HorizontalAlignment="Left"/>
                    </Grid>
                  </Grid>
                </ToggleButton-->
                  <Rectangle Classes="RightwardShadow" DockPanel.Dock="Right"/>
                  <ToggleButton x:Name="BackButton"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            TextBlock.FontWeight="SemiBold"
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            IsChecked="{Binding !IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            DockPanel.Dock="Top">
                      <Path Data="{DynamicResource Icon.BackArrow}" Stroke="{Binding $parent[ToggleButton].Foreground}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </ToggleButton>
                  <ItemsPresenter x:Name="PART_ItemsPresenter" Items="{TemplateBinding Items}"/>
                </DockPanel>
              </DockPanel>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>
  </Style>
  <Style Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton:not(:pointerover):not(:pressed):not(:checked)">
    <Setter Property="Foreground" Value="{Binding $parent[local:RibbonMenu].Foreground}"/>
    <Setter Property="Background" Value="{Binding $parent[local:RibbonMenu].Background}"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
  </Style>
  <Style Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton">
    <Setter Property="Foreground" Value="{Binding $parent[local:RibbonMenu].Foreground}"/>
  </Style>
  <!--Style Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton#BackButton:not(:pointerover):not(:pressed):not(:checked)">
    <Setter Property="Background" Value="{Binding $parent[local:RibbonMenu].Background}"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
  </Style-->
  <Style Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton:pointerover">
    <Setter Property="Background" Value="{DynamicResource Ribbon.FileButtonHoverBrush}"/>
  </Style>
  <Style Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton:checked">
    <Setter Property="Background" Value="{DynamicResource Ribbon.FileButtonPressedBrush}"/>
  </Style>
  
  
  <!-- ribbon group box -->
  <Style Selector="local|RibbonGroupBox">
    <Setter Property="Template">
      <ControlTemplate>
        <Border x:Name="EdgeBorder" BorderThickness="0">
          <Grid Name="ContentsGrid"
                ColumnDefinitions="*,Auto"
                RowDefinitions="*,15">
            <Rectangle Grid.Column="1" Grid.RowSpan="2" Margin="0,4" Width="1" HorizontalAlignment="Right" Fill="{DynamicResource Ribbon.SeparatorBrush}"/>
            <ItemsPresenter Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="2">
              <ItemsPresenter.ItemsPanel>
                <ItemsPanelTemplate>
                  <local:RibbonGroupWrapPanel x:Name="PART_ItemsPanel" DisplayMode="{TemplateBinding DisplayMode}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
              </ItemsPresenter.ItemsPanel>
            </ItemsPresenter>
            <ContentPresenter Name="PART_HeaderPresenter" TextBlock.FontSize="11" TextBlock.Foreground="{TemplateBinding Foreground}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Content="{TemplateBinding Header}"
                Grid.Column="0" Grid.Row="1"/>
            <Button Grid.Column="1" Grid.Row="1"
                Name="commandButton"
                Width="15"
                Height="15"
                HorizontalAlignment="Right"
                Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Focusable="False">
              <Button.IsVisible>
                <Binding Path="!Command" Mode="OneWay" RelativeSource="{RelativeSource Mode=TemplatedParent}">
                  <Binding.Converter>
                    <local:IsNullConverter/>
                  </Binding.Converter>
                </Binding>
              </Button.IsVisible>
              <Border>
                <Grid Width="9" Height="9">
                  <Border BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="2,2,0,0"/>
                  <Line StartPoint="0,0" EndPoint="6,6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"/>
                  <Border BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="0,0,2,2" Width="5" Height="5" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                </Grid>
              </Border>
            </Button>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>


  <!-- ribbon buttons -->
  <Style Selector="local|RibbonButton /template/ Border.RibbonButtonBackgroundBorder, local|RibbonToggleButton /template/ Border.RibbonToggleButtonBackgroundBorder">
    <Setter Property="BorderThickness" Value="0" />
  </Style>
  <Style Selector="local|RibbonButton:pointerover /template/ Border.RibbonButtonBackgroundBorder, local|RibbonToggleButton:pointerover /template/ Border.RibbonToggleButtonBackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource Ribbon.ControlHoverBackgroundBrush}"/>
  </Style>
  <Style Selector="local|RibbonButton:pressed /template/ Border.RibbonButtonBackgroundBorder, local|RibbonToggleButton:pressed /template/ Border.RibbonToggleButtonBackgroundBorder, local|RibbonToggleButton:checked /template/ Border.RibbonToggleButtonBackgroundBorder">
    <Setter Property="Background" Value="{DynamicResource Ribbon.ControlPressedBackgroundBrush}"/>
  </Style>
</Styles>